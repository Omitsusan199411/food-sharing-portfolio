version: '2'
services:
  app:
    container_name: app-rails
    build:
      context: .
      dockerfile: ./docker/dev/app/Dockerfile.dev
    environment:
      RAILS_ENV: development
    env_file: .env
    # ports番号の前者はホスト（ローカルのパソコン）からappコンテナにアクセスする際のポート番号（localhost:8080）
    # ports番号の後者はdockerネットワーク内でのアクセスポートとなる（dbコンテナとの接続ポートとなる）
    # ホストからアプリケーションにアクセスする際は、ドメイン名：8080若しくは、IPアドレス:8080を指定する。
    ports:
      - '8080:80'
    # バインドマウントにより、github上のfood-sharing-portfolioのコードをコンテナ内にマウントする
    # バインドする前に手動で~/git/github以下にgithub上のfood-sharing-portfolioのコードをクローンしておく必要がある。クローンしないとローカル上でコードを修正しても変更が反映されないので注意
    volumes:
      - ~/git/github/food-sharing-portfolio:/var/www/app/
    # ttyをtrueにすることでコンテナが勝手に正常終了してしまうことを防ぐ（ttyは標準入出力先のデバイスのことを指し、仮想端末を配置するコマンド。/dev/pts以下に接続仮想端末が追加される）
    tty: true
    depends_on:
      - db
  db:
    container_name: mysql-57
    build: 
      context: .
      dockerfile: ./docker/dev/mysql/Dockerfile.dev
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    # ports番号の前者はホストからのアクセスポート、後者はdockerネットワーク内（appコンテナと同じネットワーク）でのアクセスポート
    # 3306はdatabase.ymlのdevelopment環境のポート番号と一致させること
    ports:
      - '3308:3306'
    environment:
      MYSQL_DATABASE: food_share_app_database_dev
      MYSQL_USER: user
      MYSQL_ROOT_PASSWORD: password
      TZ: "Asia/Tokyo"
    volumes:
      - ./docker/dev/mysql/db_data:/var/lib/mysql